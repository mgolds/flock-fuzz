{"ast":null,"code":"import SimpleBoid from './simpleBoid';\nexport const simpleFlockingSketch = p => {\n  let boids = [];\n  let params = {\n    separation: 1.5,\n    alignment: 1.0,\n    cohesion: 1.0,\n    newAgents: 5\n  };\n  let isDragging = false;\n  let lastMouseX = 0;\n  let lastMouseY = 0;\n  let addCooldown = 0;\n\n  // External method to update parameters\n  p.updateParams = newParams => {\n    params = {\n      ...params,\n      ...newParams\n    };\n  };\n  p.setup = () => {\n    const canvasWidth = window.innerWidth;\n    const canvasHeight = window.innerHeight; // Use full height now that controls are on the side\n    p.createCanvas(canvasWidth, canvasHeight);\n\n    // Initialize with some boids\n    for (let i = 0; i < 50; i++) {\n      boids.push(new SimpleBoid(p, p.random(p.width), p.random(p.height)));\n    }\n  };\n  p.windowResized = () => {\n    const canvasWidth = window.innerWidth;\n    const canvasHeight = window.innerHeight; // Full height for resize as well\n    p.resizeCanvas(canvasWidth, canvasHeight);\n  };\n  p.mousePressed = () => {\n    if (p.mouseX >= 0 && p.mouseX <= p.width && p.mouseY >= 0 && p.mouseY <= p.height) {\n      isDragging = true;\n      lastMouseX = p.mouseX;\n      lastMouseY = p.mouseY;\n\n      // Add boids on initial click\n      addBoidsAtPosition(p.mouseX, p.mouseY);\n    }\n  };\n  p.mouseReleased = () => {\n    isDragging = false;\n    addCooldown = 0;\n  };\n  p.mouseDragged = () => {\n    if (isDragging && p.mouseX >= 0 && p.mouseX <= p.width && p.mouseY >= 0 && p.mouseY <= p.height) {\n      // Add boids when dragging with a cooldown to control rate\n      if (addCooldown <= 0) {\n        addBoidsAtPosition(p.mouseX, p.mouseY);\n        addCooldown = 5; // Frames to wait before adding more boids\n      } else {\n        addCooldown--;\n      }\n      lastMouseX = p.mouseX;\n      lastMouseY = p.mouseY;\n    }\n  };\n  const addBoidsAtPosition = (x, y) => {\n    const count = params.newAgents || 5;\n    for (let i = 0; i < count; i++) {\n      const boid = new SimpleBoid(p, x + p.random(-10, 10), y + p.random(-10, 10));\n      boids.push(boid);\n    }\n  };\n  p.draw = () => {\n    p.background(0);\n    for (let boid of boids) {\n      boid.flock(boids, params);\n      boid.update();\n      boid.edges();\n      boid.show();\n    }\n\n    // Draw cursor trail when dragging\n    if (isDragging && p.mouseX >= 0 && p.mouseX <= p.width && p.mouseY >= 0 && p.mouseY <= p.height) {\n      p.stroke(100, 200, 255, 100);\n      p.strokeWeight(2);\n      p.line(lastMouseX, lastMouseY, p.mouseX, p.mouseY);\n    }\n  };\n};","map":{"version":3,"names":["SimpleBoid","simpleFlockingSketch","p","boids","params","separation","alignment","cohesion","newAgents","isDragging","lastMouseX","lastMouseY","addCooldown","updateParams","newParams","setup","canvasWidth","window","innerWidth","canvasHeight","innerHeight","createCanvas","i","push","random","width","height","windowResized","resizeCanvas","mousePressed","mouseX","mouseY","addBoidsAtPosition","mouseReleased","mouseDragged","x","y","count","boid","draw","background","flock","update","edges","show","stroke","strokeWeight","line"],"sources":["C:/Users/mttgo/OneDrive/Desktop/Cursor Projects/webapps/flocking-app/src/sketches/simpleFlockingSketch.js"],"sourcesContent":["import SimpleBoid from './simpleBoid';\r\n\r\nexport const simpleFlockingSketch = (p) => {\r\n  let boids = [];\r\n  let params = {\r\n    separation: 1.5,\r\n    alignment: 1.0,\r\n    cohesion: 1.0,\r\n    newAgents: 5\r\n  };\r\n  let isDragging = false;\r\n  let lastMouseX = 0;\r\n  let lastMouseY = 0;\r\n  let addCooldown = 0;\r\n  \r\n  // External method to update parameters\r\n  p.updateParams = (newParams) => {\r\n    params = { ...params, ...newParams };\r\n  };\r\n  \r\n  p.setup = () => {\r\n    const canvasWidth = window.innerWidth;\r\n    const canvasHeight = window.innerHeight; // Use full height now that controls are on the side\r\n    p.createCanvas(canvasWidth, canvasHeight);\r\n    \r\n    // Initialize with some boids\r\n    for (let i = 0; i < 50; i++) {\r\n      boids.push(new SimpleBoid(p, p.random(p.width), p.random(p.height)));\r\n    }\r\n  };\r\n  \r\n  p.windowResized = () => {\r\n    const canvasWidth = window.innerWidth;\r\n    const canvasHeight = window.innerHeight; // Full height for resize as well\r\n    p.resizeCanvas(canvasWidth, canvasHeight);\r\n  };\r\n  \r\n  p.mousePressed = () => {\r\n    if (p.mouseX >= 0 && p.mouseX <= p.width && p.mouseY >= 0 && p.mouseY <= p.height) {\r\n      isDragging = true;\r\n      lastMouseX = p.mouseX;\r\n      lastMouseY = p.mouseY;\r\n      \r\n      // Add boids on initial click\r\n      addBoidsAtPosition(p.mouseX, p.mouseY);\r\n    }\r\n  };\r\n  \r\n  p.mouseReleased = () => {\r\n    isDragging = false;\r\n    addCooldown = 0;\r\n  };\r\n  \r\n  p.mouseDragged = () => {\r\n    if (isDragging && p.mouseX >= 0 && p.mouseX <= p.width && p.mouseY >= 0 && p.mouseY <= p.height) {\r\n      // Add boids when dragging with a cooldown to control rate\r\n      if (addCooldown <= 0) {\r\n        addBoidsAtPosition(p.mouseX, p.mouseY);\r\n        addCooldown = 5; // Frames to wait before adding more boids\r\n      } else {\r\n        addCooldown--;\r\n      }\r\n      lastMouseX = p.mouseX;\r\n      lastMouseY = p.mouseY;\r\n    }\r\n  };\r\n  \r\n  const addBoidsAtPosition = (x, y) => {\r\n    const count = params.newAgents || 5;\r\n    for (let i = 0; i < count; i++) {\r\n      const boid = new SimpleBoid(\r\n        p,\r\n        x + p.random(-10, 10),\r\n        y + p.random(-10, 10)\r\n      );\r\n      boids.push(boid);\r\n    }\r\n  };\r\n  \r\n  p.draw = () => {\r\n    p.background(0);\r\n    \r\n    for (let boid of boids) {\r\n      boid.flock(boids, params);\r\n      boid.update();\r\n      boid.edges();\r\n      boid.show();\r\n    }\r\n    \r\n    // Draw cursor trail when dragging\r\n    if (isDragging && p.mouseX >= 0 && p.mouseX <= p.width && p.mouseY >= 0 && p.mouseY <= p.height) {\r\n      p.stroke(100, 200, 255, 100);\r\n      p.strokeWeight(2);\r\n      p.line(lastMouseX, lastMouseY, p.mouseX, p.mouseY);\r\n    }\r\n  };\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}