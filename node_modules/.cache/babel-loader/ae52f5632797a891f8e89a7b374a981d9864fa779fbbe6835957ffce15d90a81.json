{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mttgo\\\\OneDrive\\\\Desktop\\\\Cursor Projects\\\\webapps\\\\flocking-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Flocking from './components/Flocking';\nimport Controls from './components/Controls';\nimport DisplaySettings from './components/DisplaySettings';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [params, setParams] = useState({\n    separation: 1.5,\n    alignment: 1.0,\n    cohesion: 1.0,\n    newAgents: 5\n  });\n  const [displaySettings, setDisplaySettings] = useState({\n    trailLength: 200,\n    trailThickness: 0.5,\n    trailType: 'line',\n    keepTrails: false,\n    colorMode: 'single',\n    agentShape: 'triangle',\n    agentSize: 1,\n    fadeAmount: 25,\n    colors: {\n      main: '#ffffff',\n      start: '#ff0000',\n      end: '#0000ff',\n      agent: '#ffffff',\n      background: '#000000'\n    }\n  });\n  const [isPaused, setIsPaused] = useState(false);\n  const handleParamChange = (param, value) => {\n    setParams(prev => ({\n      ...prev,\n      [param]: value\n    }));\n  };\n  const handleDisplaySettingsChange = newSettings => {\n    setDisplaySettings(newSettings);\n  };\n  const togglePause = () => {\n    setIsPaused(prev => !prev);\n  };\n  const downloadSVG = () => {\n    const svgElement = document.querySelector('.canvas-container svg');\n    if (!svgElement) return;\n\n    // Make a copy to modify for download\n    const svgClone = svgElement.cloneNode(true);\n\n    // Add needed attributes for standalone SVG\n    svgClone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n    svgClone.setAttribute('version', '1.1');\n\n    // Convert to string\n    const svgData = new XMLSerializer().serializeToString(svgClone);\n    const blob = new Blob([svgData], {\n      type: 'image/svg+xml'\n    });\n    const url = URL.createObjectURL(blob);\n\n    // Create download link\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'flocking-simulation.svg';\n    document.body.appendChild(link);\n    link.click();\n\n    // Clean up\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simulation-container\",\n      children: [/*#__PURE__*/_jsxDEV(Flocking, {\n        params: params,\n        displaySettings: displaySettings,\n        isPaused: isPaused\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        params: params,\n        onParamChange: handleParamChange,\n        isPaused: isPaused,\n        onTogglePause: togglePause,\n        onDownloadSVG: downloadSVG\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DisplaySettings, {\n        settings: displaySettings,\n        onSettingsChange: handleDisplaySettingsChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0kb9MZFdM3aAe5D0hziGdWk3EjI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Flocking","Controls","DisplaySettings","jsxDEV","_jsxDEV","App","_s","params","setParams","separation","alignment","cohesion","newAgents","displaySettings","setDisplaySettings","trailLength","trailThickness","trailType","keepTrails","colorMode","agentShape","agentSize","fadeAmount","colors","main","start","end","agent","background","isPaused","setIsPaused","handleParamChange","param","value","prev","handleDisplaySettingsChange","newSettings","togglePause","downloadSVG","svgElement","document","querySelector","svgClone","cloneNode","setAttribute","svgData","XMLSerializer","serializeToString","blob","Blob","type","url","URL","createObjectURL","link","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onParamChange","onTogglePause","onDownloadSVG","settings","onSettingsChange","_c","$RefreshReg$"],"sources":["C:/Users/mttgo/OneDrive/Desktop/Cursor Projects/webapps/flocking-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Flocking from './components/Flocking';\r\nimport Controls from './components/Controls';\r\nimport DisplaySettings from './components/DisplaySettings';\r\nimport './styles/App.css';\r\n\r\nfunction App() {\r\n  const [params, setParams] = useState({\r\n    separation: 1.5,\r\n    alignment: 1.0,\r\n    cohesion: 1.0,\r\n    newAgents: 5\r\n  });\r\n  \r\n  const [displaySettings, setDisplaySettings] = useState({\r\n    trailLength: 200,\r\n    trailThickness: 0.5,\r\n    trailType: 'line',\r\n    keepTrails: false,\r\n    colorMode: 'single',\r\n    agentShape: 'triangle',\r\n    agentSize: 1,\r\n    fadeAmount: 25,\r\n    colors: {\r\n      main: '#ffffff',\r\n      start: '#ff0000',\r\n      end: '#0000ff',\r\n      agent: '#ffffff',\r\n      background: '#000000'\r\n    }\r\n  });\r\n\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  \r\n  const handleParamChange = (param, value) => {\r\n    setParams(prev => ({\r\n      ...prev,\r\n      [param]: value\r\n    }));\r\n  };\r\n  \r\n  const handleDisplaySettingsChange = (newSettings) => {\r\n    setDisplaySettings(newSettings);\r\n  };\r\n\r\n  const togglePause = () => {\r\n    setIsPaused(prev => !prev);\r\n  };\r\n  \r\n  const downloadSVG = () => {\r\n    const svgElement = document.querySelector('.canvas-container svg');\r\n    if (!svgElement) return;\r\n    \r\n    // Make a copy to modify for download\r\n    const svgClone = svgElement.cloneNode(true);\r\n    \r\n    // Add needed attributes for standalone SVG\r\n    svgClone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\r\n    svgClone.setAttribute('version', '1.1');\r\n    \r\n    // Convert to string\r\n    const svgData = new XMLSerializer().serializeToString(svgClone);\r\n    const blob = new Blob([svgData], { type: 'image/svg+xml' });\r\n    const url = URL.createObjectURL(blob);\r\n    \r\n    // Create download link\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = 'flocking-simulation.svg';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    \r\n    // Clean up\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"simulation-container\">\r\n        <Flocking \r\n          params={params} \r\n          displaySettings={displaySettings}\r\n          isPaused={isPaused}\r\n        />\r\n        <Controls \r\n          params={params} \r\n          onParamChange={handleParamChange}\r\n          isPaused={isPaused}\r\n          onTogglePause={togglePause}\r\n          onDownloadSVG={downloadSVG}\r\n        />\r\n        <DisplaySettings \r\n          settings={displaySettings} \r\n          onSettingsChange={handleDisplaySettingsChange} \r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}